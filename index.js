const Telegraf = require("telegraf");
const https = require("https");

var characters = [
  "–ù–∞—Ä—É—Ç–æ –£–¥–∑—É–º–∞–∫–∏",
  "–°–∞—Å–∫—ç –£—Ç–∏—Ö–∞",
  "–°–∞–∫—É—Ä–∞ –•–∞—Ä—É–Ω–æ"
];

const bot = new Telegraf("860469083:AAElj7TvrvxwtOghWazeuucmticDiLDR_38");
bot.start(ctx => ctx.reply("–î–∞—Ä–æ–≤–∞!"));
bot.help(ctx =>
  ctx.reply(
    '"–ö—Ç–æ —è –∏–∑ –ù–∞—Ä—É—Ç–æ" - –∫—Ç–æ —Ç—ã –∏–∑ –ù–∞—Ä—É—Ç–æ\n"–î–∞–π—Ç–µ –º–µ–º" - –º–µ–º –∏–∑ /dankmemes'
  )
);
// bot.on('sticker', (ctx) => ctx.reply('üëç'))

bot.hears(/–∫—Ç–æ —è –∏–∑ –Ω–∞—Ä—É—Ç–æ/gi, ctx => {
  try {
    const characterNum = Math.floor(Math.random() * characters.length);
    ctx.replyWithPhoto({ source: `${__dirname}/img/${characterNum}.jpg` }, { caption: characters[characterNum] });
  } catch (e) {
    console.error(e);
    ctx.reply("–ß—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å");
  }
});

bot.hears(/–∞—Ä—Ç–µ–º/gi, ctx => ctx.reply("–ê—Ä—Ç–µ–º, –≤–µ—Ä–Ω–∏—Å—å –≤ –ö–æ–Ω–æ—Ö—É!"));
bot.hears(/–º–∞–∫—Å–∏–º/gi, ctx => ctx.reply("–ú–∞–∫—Å–∏–º, –≤–µ—Ä–Ω–∏—Å—å –≤ –ö–æ–Ω–æ—Ö—É!"));
bot.hears(/–¥–∞–π—Ç–µ –º–µ–º/gi, ctx => {
  try {
    https
      .get("https://meme-api.herokuapp.com/gimme/dankmemes", res => {
        console.log("statusCode:", res.statusCode);
        console.log("headers:", res.headers);

        res.on("data", d => {
          process.stdout.write(d);
          var obj = JSON.parse(d);
          console.log(obj.url);
          const memeUrl = obj.url;
          const memeTitle = obj.title;
          ctx.replyWithPhoto({ url: memeUrl }, { caption: memeTitle });
        });
      })
      .on("error", e => {
        console.error(e);
      });
  } catch (e) {
    console.error(e);
    ctx.reply("–ß—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å");
  }
});
bot.launch();
